"""
Django management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ excerpt –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage.py regenerate_excerpts
"""

from django.core.management.base import BaseCommand
from articles.models import Article


class Command(BaseCommand):
    help = '–†–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç excerpt –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π, —É–±–∏—Ä–∞—è Markdown —Ä–∞–∑–º–µ—Ç–∫—É'

    def add_arguments(self, parser):
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ, –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
        )

    def handle(self, *args, **options):
        dry_run = options['dry_run']

        if dry_run:
            self.stdout.write(self.style.WARNING('–†–µ–∂–∏–º DRY RUN - —Å—Ç–∞—Ç—å–∏ –Ω–µ –±—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω—ã'))

        articles = Article.objects.all()
        total_articles = articles.count()
        updated_count = 0

        self.stdout.write(f'\nüìù –û–±—Ä–∞–±–æ—Ç–∫–∞ {total_articles} —Å—Ç–∞—Ç–µ–π...\n')

        for article in articles:
            old_excerpt = article.excerpt

            # –û—á–∏—â–∞–µ–º excerpt, —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
            article.excerpt = ''

            if not dry_run:
                # save() –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π excerpt —Å –æ—á–∏—Å—Ç–∫–æ–π Markdown
                article.save()
                updated_count += 1

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            if article.excerpt != old_excerpt:
                self.stdout.write(f'  ‚úì {article.title[:60]}...')
                if dry_run:
                    self.stdout.write(f'    –°—Ç–∞—Ä—ã–π: {old_excerpt[:80]}...')
                    self.stdout.write(f'    –ù–æ–≤—ã–π: (–±—É–¥–µ—Ç —Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω)')
            else:
                self.stdout.write(f'  - {article.title[:60]}... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)')

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        if dry_run:
            self.stdout.write(self.style.WARNING(f'\n‚ö†Ô∏è  DRY RUN –∑–∞–≤–µ—Ä—à–µ–Ω'))
            self.stdout.write(f'–ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {total_articles}')
        else:
            self.stdout.write(self.style.SUCCESS(f'\n‚úÖ –ì–æ—Ç–æ–≤–æ!'))
            self.stdout.write(f'–û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: {updated_count}')
